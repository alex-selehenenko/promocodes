// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Promocodes.Data.Persistence;

namespace Promocodes.Data.Persistence.Migrations
{
    [DbContext(typeof(PromocodesDbContext))]
    partial class PromocodesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CategoryShop", b =>
                {
                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ShopId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryShop");

                    b.HasData(
                        new
                        {
                            ShopId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            ShopId = 2,
                            CategoryId = 2
                        },
                        new
                        {
                            ShopId = 3,
                            CategoryId = 3
                        });
                });

            modelBuilder.Entity("Promocodes.Data.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Baby"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Clothes"
                        });
                });

            modelBuilder.Entity("Promocodes.Data.Core.Entities.CustomerOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerId")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<int?>("OfferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Promocodes.Data.Core.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Promocode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("ShopId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("Offers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Get 30% discount!",
                            Discount = 0.3f,
                            ExpirationDate = new DateTime(2021, 11, 29, 14, 40, 55, 442, DateTimeKind.Local).AddTicks(6748),
                            IsDeleted = false,
                            IsEnabled = true,
                            Promocode = "OCTOBER",
                            ShopId = 1,
                            StartDate = new DateTime(2021, 10, 30, 14, 40, 55, 441, DateTimeKind.Local).AddTicks(6615),
                            Title = "Electron Plus October GRAND SALE"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Hurry up to get 70% discount on TOYS!",
                            Discount = 0.7f,
                            ExpirationDate = new DateTime(2021, 11, 9, 14, 40, 55, 442, DateTimeKind.Local).AddTicks(7920),
                            IsDeleted = false,
                            IsEnabled = true,
                            Promocode = "OCTOBER",
                            ShopId = 2,
                            StartDate = new DateTime(2021, 10, 30, 14, 40, 55, 442, DateTimeKind.Local).AddTicks(7914),
                            Title = "Baby Boom FRESH discount"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Get 50% discount on summer collection!",
                            Discount = 0.5f,
                            ExpirationDate = new DateTime(2021, 11, 29, 14, 40, 55, 442, DateTimeKind.Local).AddTicks(7928),
                            IsDeleted = false,
                            IsEnabled = true,
                            Promocode = "OCTOBER",
                            ShopId = 3,
                            StartDate = new DateTime(2021, 10, 30, 14, 40, 55, 442, DateTimeKind.Local).AddTicks(7927),
                            Title = "Zebra SALE"
                        });
                });

            modelBuilder.Entity("Promocodes.Data.Core.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserId")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationTime = new DateTime(2021, 10, 30, 14, 40, 55, 443, DateTimeKind.Local).AddTicks(4854),
                            LastUpdateTime = new DateTime(2021, 10, 30, 14, 40, 55, 444, DateTimeKind.Local).AddTicks(4860),
                            ShopId = 1,
                            Stars = 10,
                            Text = "Very good shop!",
                            UserId = "698306d9-4478-4a58-8b38-b547e85e2289"
                        },
                        new
                        {
                            Id = 2,
                            CreationTime = new DateTime(2021, 10, 30, 14, 40, 55, 443, DateTimeKind.Local).AddTicks(4872),
                            LastUpdateTime = new DateTime(2021, 10, 30, 14, 40, 55, 444, DateTimeKind.Local).AddTicks(4873),
                            ShopId = 2,
                            Stars = 8,
                            Text = "Like baby boom. But delivery taskes a wile",
                            UserId = "698306d9-4478-4a58-8b38-b547e85e2289"
                        },
                        new
                        {
                            Id = 3,
                            CreationTime = new DateTime(2021, 10, 30, 14, 40, 55, 443, DateTimeKind.Local).AddTicks(5775),
                            LastUpdateTime = new DateTime(2021, 10, 30, 14, 40, 55, 444, DateTimeKind.Local).AddTicks(5778),
                            ShopId = 3,
                            Stars = 1,
                            Text = "Awful service!",
                            UserId = "698306d9-4478-4a58-8b38-b547e85e2289"
                        },
                        new
                        {
                            Id = 4,
                            CreationTime = new DateTime(2021, 10, 30, 14, 40, 55, 443, DateTimeKind.Local).AddTicks(5781),
                            LastUpdateTime = new DateTime(2021, 10, 30, 14, 40, 55, 444, DateTimeKind.Local).AddTicks(5782),
                            ShopId = 3,
                            Stars = 9,
                            Text = "Excellent!",
                            UserId = "82b4753f-8f7f-43d1-a67d-13b531d9512b"
                        });
                });

            modelBuilder.Entity("Promocodes.Data.Core.Entities.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Site")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UQ_Shop_Name")
                        .IsUnique();

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit",
                            Name = "Electron Plus",
                            Site = "https://eee-plus.com.ua"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit",
                            Name = "Baby boom",
                            Site = "https://b-a-b-y-boom.com.ua"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit",
                            Name = "Zebra",
                            Site = "https://zebrrra.biz.ua"
                        });
                });

            modelBuilder.Entity("Promocodes.Data.Core.Entities.ShopAdmin", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("ShopAdmins");

                    b.HasData(
                        new
                        {
                            Id = "e71a1ef0-fcdc-4069-87bb-2b38bdde23ac",
                            ShopId = 1
                        },
                        new
                        {
                            Id = "b466992a-5ad2-4f8b-ab92-cd1abbbe22e9",
                            ShopId = 2
                        },
                        new
                        {
                            Id = "766fdfbf-119d-45f7-a148-995bbe1009d0",
                            ShopId = 3
                        });
                });

            modelBuilder.Entity("CategoryShop", b =>
                {
                    b.HasOne("Promocodes.Data.Core.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promocodes.Data.Core.Entities.Shop", null)
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Promocodes.Data.Core.Entities.CustomerOffer", b =>
                {
                    b.HasOne("Promocodes.Data.Core.Entities.Offer", "Offer")
                        .WithMany("Customers")
                        .HasForeignKey("OfferId");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("Promocodes.Data.Core.Entities.Offer", b =>
                {
                    b.HasOne("Promocodes.Data.Core.Entities.Shop", "Shop")
                        .WithMany("Offers")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Promocodes.Data.Core.Entities.Review", b =>
                {
                    b.HasOne("Promocodes.Data.Core.Entities.Shop", "Shop")
                        .WithMany("Reviews")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Promocodes.Data.Core.Entities.ShopAdmin", b =>
                {
                    b.HasOne("Promocodes.Data.Core.Entities.Shop", "Shop")
                        .WithMany("Admins")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Promocodes.Data.Core.Entities.Offer", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Promocodes.Data.Core.Entities.Shop", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Offers");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
